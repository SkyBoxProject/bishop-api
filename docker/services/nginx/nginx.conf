user root;
worker_processes auto;
daemon off;

# Number of file descriptors used for Nginx.
worker_rlimit_nofile 64000;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    # Determines how many clients will be served by each worker process.
    worker_connections 4000;

    # The effective method, used on Linux 2.6+, optmized to serve many clients with each thread.
    use epoll;

    # Accept as many connections as possible, after nginx gets notification about a new connection.
    multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
		  '$status $body_bytes_sent "$http_referer" '
		  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;

  # Sendfile copies data between one FD and other from within the kernel.
  sendfile on;

  # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
  tcp_nopush on;

  # Don't buffer data-sends (disable Nagle algorithm).
  tcp_nodelay on;

  # Timeout for keep-alive connections. Server will close connections after this time.
  keepalive_timeout 65;

  # Number of requests a client can make over the keep-alive connection.
  keepalive_requests 100;

  # Allow the server to close the connection after a client stops responding.
  reset_timedout_connection on;

  # Send the client a "request timed out" if the body is not loaded by this time.
  client_body_timeout 10;

  # If the client stops reading data, free up the stale client connection after this much time.
  send_timeout 2;

  include /etc/nginx/conf.d/*;
}
